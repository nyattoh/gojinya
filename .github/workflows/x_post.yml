name: Post to X

on:
  push:
    branches:
      - main
    paths:
      - 'content/**'
  schedule:
    # UTC 08:00 → JST 17:00
    # UTC 20:00 → JST 05:00
    - cron: '0 8,20 * * *'
  workflow_dispatch:
    inputs:
      target_file:
        description: 'Target file to post (e.g., content/001.mp4)'
        required: false
        type: string

jobs:
  # ────────────────
  immediate_post:  # プッシュイベント時のみ実行
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Ensure tooling (jq)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tweepy

      - name: Gather changed files
        id: changed
        run: |
          # null 安全にコミット差分を取得
          FILES=$(jq -r '.commits // [] | .[].added[], .[].modified[]' < "$GITHUB_EVENT_PATH" | tr '\n' ' ')
          echo "list=$FILES" >> "$GITHUB_OUTPUT"

      - name: Find media files to post
        id: pick
        run: |
          FILES="${{ steps.changed.outputs.list }}"
          CANDIDATES=""
          
          # content/ 内の .mp4 または .txt ファイルから候補を抽出
          for f in $FILES; do
            case "$f" in
              content/*.mp4|content/*.txt)
                base=$(basename "$f" | sed 's/\.(mp4|txt)$//')
                # 日時形式ファイル（10桁数字）は除外
                if echo "$base" | grep -Eq '^[0-9]{10}$'; then
                  continue
                fi
                CANDIDATES="$CANDIDATES $base"
                ;;
            esac
          done
          
          # 重複を除去して最後の候補を選択
          UNIQUE=$(echo "$CANDIDATES" | tr ' ' '\n' | sort -u | tail -n1)
          
          # .mp4 と .txt の両方が存在するかチェック
          if [ -n "$UNIQUE" ] && [ -f "content/${UNIQUE}.mp4" ]; then
            echo "last=content/${UNIQUE}.mp4" >> "$GITHUB_OUTPUT"
            echo "Found media pair: ${UNIQUE}.mp4 + ${UNIQUE}.txt"
          else
            echo "last=" >> "$GITHUB_OUTPUT"
            echo "No valid media pair found"
          fi

      - name: Post last file (auto-read matching .txt)
        if: ${{ steps.pick.outputs.last != '' }}
        env:
          X_API_KEY:             ${{ secrets.X_API_KEY }}
          X_API_SECRET_KEY:      ${{ secrets.X_API_SECRET_KEY }}
          X_ACCESS_TOKEN:        ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        run: |
          if [ -z "$X_API_KEY" ] || [ -z "$X_API_SECRET_KEY" ] || [ -z "$X_ACCESS_TOKEN" ] || [ -z "$X_ACCESS_TOKEN_SECRET" ]; then
            echo "Required X API secrets are not set. Skipping post." >&2
            exit 1
          fi
          FILE="${{ steps.pick.outputs.last }}"
          python post_to_x.py --file "$FILE"

  # ────────────────
  scheduled_post:  # 予約投稿（スケジュール）時のみ実行
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tweepy

      - name: Post scheduled datetime files
        env:
          X_API_KEY:             ${{ secrets.X_API_KEY }}
          X_API_SECRET_KEY:      ${{ secrets.X_API_SECRET_KEY }}
          X_ACCESS_TOKEN:        ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        run: |
          # JST でファイル名を生成
          NOW=$(TZ=Asia/Tokyo date +%Y%m%d%H)
          VIDEO="content/${NOW}.mp4"
          TEXT="content/${NOW}.txt"

          if [ -z "$X_API_KEY" ] || [ -z "$X_API_SECRET_KEY" ] || [ -z "$X_ACCESS_TOKEN" ] || [ -z "$X_ACCESS_TOKEN_SECRET" ]; then
            echo "Required X API secrets are not set. Skipping post." >&2
            exit 1
          fi

          if [ -f "$VIDEO" ] && [ -f "$TEXT" ]; then
            python post_to_x.py --video "$VIDEO" --text "$TEXT"
          else
            echo "No scheduled files for ${NOW}"
          fi

  # ────────────────
  manual_post:  # 手動実行時のみ実行
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tweepy

      - name: Post specified or all available files
        env:
          X_API_KEY:             ${{ secrets.X_API_KEY }}
          X_API_SECRET_KEY:      ${{ secrets.X_API_SECRET_KEY }}
          X_ACCESS_TOKEN:        ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        run: |
          if [ -z "$X_API_KEY" ] || [ -z "$X_API_SECRET_KEY" ] || [ -z "$X_ACCESS_TOKEN" ] || [ -z "$X_ACCESS_TOKEN_SECRET" ]; then
            echo "Required X API secrets are not set. Skipping post." >&2
            exit 1
          fi

          TARGET="${{ github.event.inputs.target_file }}"
          
          if [ -n "$TARGET" ]; then
            # 指定されたファイルを投稿
            if [ -f "$TARGET" ]; then
              python post_to_x.py --file "$TARGET"
            else
              echo "Specified file $TARGET not found"
              exit 1
            fi
          else
            # content/ 内の非日時形式ファイルをすべて投稿
            for mp4_file in content/*.mp4; do
              [ -f "$mp4_file" ] || continue
              base=$(basename "$mp4_file" .mp4)
              
              # 日時形式ファイル（10桁数字）は除外
              if echo "$base" | grep -Eq '^[0-9]{10}$'; then
                continue
              fi
              
              echo "Posting $mp4_file..."
              python post_to_x.py --file "$mp4_file"
              sleep 5  # レート制限対策
            done
          fi
